---
- group: base_station_mode
  name: enable
  type: boolean
  Units: 
  default value: 'false'
  enumerated possible values: true,false
  Description: Operate in base station mode
  Notes: 'This flag ultimately determines whether the SBP message with identifier
    MSG_BASE_POS will be calculated and sent.  Logically, setting this attribute to
    true sets the current Piksi as a base station and configures the unit to send
    it''s surveyed location coordinates to the other Piksi(s) with which the base
    station is communicating.  If enabled, the Piksi that receives the base station''s
    surveyed coordinates will also calculate and communicate its own pseudo absolute
    RTK position based upon the received position of the base station.  '
- group: base_station_mode
  name: surveyed lat
  type: Double
  Units: degrees
  default value: '0'
  enumerated possible values: 
  Description: Surveyed latitude of the Piksi connected to the console over usb
  Notes: This setting represents the latitude of the connected piksi's antenna.  If
    "base station mode" is true, the coordinate will be communicated to the rover
    with which to calculate the rover's pseudo-absolute RTK position.  The value should
    be as accurate as possible and should have precision to at least 7 digits following
    the decimal point.  For reference, 1e-7 degrees of latitude is about 1.1cm on
    the surface of the earth. Any errors in the surveyed position will directly affect
    the pseudo-absolute RTK position measurement reported by the roving Piksi.
- group: base_station_mode
  name: surveyed lon
  type: Double
  Units: degrees
  default value: '0'
  enumerated possible values: 
  Description: Surveyed longitude of the Piksi connected to the console over usb
  Notes: This setting represents the longitude of the connected Piksi's antenna.  If
    "base station mode" is true, the coordinate will be communicated to the rover
    unit with which to calculate the rover's pseudo-absolute RTK position.  This value
    should be as accurate as possible and should have precision to at least 7 digits
    following the decimal point. For reference, 1e-7 degrees of longitude at 35 degrees
    latitude is about 1 cm. Any errors in the surveyed position will directly affect
    the pseudo-absolute RTK position measurement reported by the roving Piksi.
- group: base_station_mode
  name: surveyed alt
  type: Double
  Units: meters
  default value: '0'
  enumerated possible values: 
  Description: Surveyed altitude of the Piksi connected to the console over usb
  Notes: This setting represents the altitude of the antenna connected to the Piksi
    above the WGS84 ellipsoid. This coordinate will be communicated to rover unit
    against which to calculate a pseudo-absolute position. This value should be as
    accurate as possible and should be precise to 1 cm.  Any errors in the surveyed
    position will directly affect the pseudo-absolute RTK position measurement reported
    by the roving Piksi.
- group: float_kf
  name: phase_var
  type: Double
  Units: cycles^2
  default value: '0.0144'
  enumerated possible values: 
  Description: Assumed variance of a satellite's phase measurement
  Notes: This setting adjusts variance estimates in the Swift Kalman filter which
    aids in integer ambiguity resolution (IAR).  Increasing this value can reduce
    the occurrence of false carrier phase locks but can also increase the time required
    to achieve an IAR fixed solution.  This setting should not be adjusted by end
    users.
- group: float_kf
  name: code_var
  type: Double
  Units: meters^2
  default value: '40000'
  enumerated possible values: 
  Description: Assumed variance of a satellite's pseudorange measurement
  Notes: This setting adjusts variance estimates in the Swift Kalman filter which
    aids in integer ambiguity resolution (IAR).  Increasing this value can reduce
    the occurrence of false carrier phase locks but can also increase the time required
    to achieve an IAR fixed solution.  This setting should not be adjusted by end
    users.
- group: float_kf
  name: amb_init_var
  type: Double
  Units: non dimensional
  default value: '1.00E+08'
  enumerated possible values: 
  Description: Initial integer ambiguity variance at filter initialization
  Notes: This setting adjusts variance estimates in the Swift Kalman filter which
    aids in integer ambiguity resolution (IAR).  Increasing this value can reduce
    the occurrence of false carrier phase locks but can also increase the time required
    to achieve an IAR fixed solution.  This setting should not be adjusted by end
    users.
- group: float_kf
  name: new_amb_var
  type: Double
  Units: non dimensional
  default value: '1.00E+10'
  enumerated possible values: 
  Description: Variance for new ambiguity measurements
  Notes: This setting adjusts variance estimates in the Swift Kalman filter which
    aids in integer ambiguity resolution (IAR).  Increasing this value can reduce
    the occurrence of false carrier phase locks but can also increase the time required
    to achieve an IAR fixed solution.  This setting should not be adjusted by end
    users.
- group: frontend
  name: antenna_selection
  type: enum
  Units: 
  default value: Auto
  enumerated possible values: Auto,Patch,External
  Description: Determines which antenna to use.
  Notes: This setting selects the antenna input that should be used by the Piksi.  When
    set to auto, if the unit senses an external antenna attached, it will use the
    external antenna.  If no external antenna is attached, it will use the integrated
    patch antenna.  This setting can override the automatic antenna selection and
    force the external or patch antenna to be used.
- group: iar
  name: phase_var
  type: double
  Units: cycles^2
  default value: '0.0144'
  enumerated possible values: 
  Description: Determines the measured carrier phase variance for use in the integer
    ambiguity resolution test loop
  Notes: This setting adjusts variance estimates in the integer ambiguity resolution
    (IAR) subroutine.  Increasing this value can reduce the occurrence of false carrier
    phase locks but can also increase the time required to achieve an IAR fixed solution.  This
    setting should not be adjusted by end users.
- group: iar
  name: code_var
  type: double
  Units: meters^2
  default value: '40000'
  enumerated possible values: 
  Description: Determines the pseudocode variance for the integer ambiguity resolution
    subroutine
  Notes: This setting adjusts variance estimates in the integer ambiguity resolution
    (IAR) subroutine.  Increasing this value can reduce the occurrence of false carrier
    phase locks but can also increase the time required to achieve an IAR fixed solution.  This
    setting should not be adjusted by end users.
- group: sbp
  name: obs_msg_max_size
  type: integer
  Units: bytes
  default value: '104'
  enumerated possible values: 
  Description: Determines the maximum message length for raw observation sbp messages.
  Notes: 'This parameter is useful for tuning observation messages for compatibility
    with radio modems.  Some serial modems will internally split serial packets for
    their protocol and this parameter allows the size of the message to be reduced
    as to prevent the modem from sending multiple packets. If the parameter exceeds
    255 bytes (the maximum size of an SBP message), the Piksi firmware will ignore
    the parameter and use 255 bytes.  If the parameter is set smaller than the size
    of one observation, the Piksi firmware will ignore the parameter and use the size
    of one observation as the maximum message size.  '
- group: simulator
  name: enabled
  type: boolean
  Units: 
  default value: 'false'
  enumerated possible values: true,false
  Description: Toggles the swift navigation internal simulator on and off
  Notes: The swift navigation simulator will provide simulated outputs of a stationary
    base station and the current Piksi moving in a circle around the base station.
- group: simulator
  name: base_ecef_x
  type: double
  Units: meters
  default value: 
  enumerated possible values: 
  Description: Simulated base station position
  Notes: Earth centered earth fixed (ECEF) x position of the simulated base station.
- group: simulator
  name: base_ecef_y
  type: double
  Units: meters
  default value: 
  enumerated possible values: 
  Description: Simulated base station position
  Notes: Earth centered earth fixed (ECEF) y position of the simulated base station.
- group: simulator
  name: base_ecef_z
  type: double
  Units: meters
  default value: 
  enumerated possible values: 
  Description: Simulated base station position
  Notes: Earth centered earth fixed (ECEF) z position of the simulated base station.
- group: simulator
  name: speed
  type: double
  Units: meters/s
  default value: '4'
  enumerated possible values: 
  Description: Simulated tangential speed of Piksi
  Notes: 
- group: simulator
  name: radius
  type: double
  Units: meters
  default value: '100'
  enumerated possible values: 
  Description: Radius of the circle around which the simulated Piksi will move
  Notes: 
- group: simulator
  name: pos_sigma
  type: double
  Units: meters^2
  default value: '2'
  enumerated possible values: 
  Description: Standard deviation of simulated single point position
  Notes: 
- group: simulator
  name: speed_sigma
  type: double
  Units: meters^2/s^2
  default value: '0.02'
  enumerated possible values: 
  Description: Standard deviation of noise addition to simulated tangential speed.
  Notes: 
- group: simulator
  name: cn0_sigma
  type: double
  Units: dbm hz
  default value: '0.1'
  enumerated possible values: 
  Description: Standard deviation of noise added to the simulated signal to noise
    ratio
  Notes: 
- group: simulator
  name: pseudorange_sigma
  type: double
  Units: meters
  default value: '16'
  enumerated possible values: 
  Description: Standard deviation of noise added to the simulated pseudo range
  Notes: 
- group: simulator
  name: phase_sigma
  type: double
  Units: cycles
  default value: '0.0009'
  enumerated possible values: 
  Description: Standard deviation of noise added to the simulated carrier phase
  Notes: 
- group: simulator
  name: num_sats
  type: integer
  Units: 
  default value: '9'
  enumerated possible values: 
  Description: The number of satellites for the simulator.
  Notes: 
- group: simulator
  name: mode_mask
  type: packed bitfield
  Units: 
  default value: 15 (decimal), 0xF (hexadecimal)
  enumerated possible values: 
  Description: 'Determines the types of position outputs for the simulator.  '
  Notes: |-
    bit 0 (decimal value 1) turns on single point position PVT simulated outputs
    bit 1 (decimal value 2) turns on the satellite tracking simulated outputs
    bit 2 (decimal value 4) turns on Float IAR simulated RTK outputs
    bit 3 (decimal value 8) turns on Fixed IAR simulated RTK outputs
- group: solution
  name: soln_freq
  type: integer
  Units: hz
  default value: '10'
  enumerated possible values: 
  Description: The rate at which a solution is generated internally to the Piksi.
  Notes: 
- group: solution
  name: output_every_n_obs
  type: integer
  Units: 
  default value: '2'
  enumerated possible values: 
  Description: 'Integer divisor of solution frequency for which the observations will
    be output. '
  Notes: For instance, if the solution frequency is 10 hz, and the "output every n
    obs" parameter is 2, it means that the observation output will occur at a rate
    of 5hz.  Since the observations are the information used by the Piksi receiving
    corrections from the connected Piksi, this determines the rate of information
    sharing for RTK solution output. This parameter is designed to tune the rate at
    which correction information is passed from one piksi to the other as to efficiently
    use radio modem bandwidth and fit with user applications.
- group: solution
  name: dgnss_solution_mode
  type: enum
  Units: 
  default value: 
  enumerated possible values: Low Latency, Time Matched
  Description: Determines the type of RTK solution which will be output.
  Notes: A low latency solution uses an internal model of anticipated satellite observations
    to provide RTK output with minimal latency but slightly reduced accuracy.  This
    mode should be used for most applications.  Where accuracy is desired with the
    expectation of increased latency, the "Time matched" mode can be chosen.  This
    means that the RTK output will require a corresponding set of correction observations
    for each timestamp.
- group: solution
  name: dgnss_filter
  type: enum
  Units: 
  default value: Fixed
  enumerated possible values: Fixed,Float
  Description: Determines the type of IAR the pikis will attempt to achieve.
  Notes: If "fixed", the Piksi will output a fixed integer ambiguity estimate.  If
    no fixed solution is available, it will rever to the float solution.  If "float",
    the device will only output the float integer ambiguity estimate.
- group: solution
  name: known_baseline_n
  type: double
  Units: meters (north)
  default value: '0'
  enumerated possible values: 
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: 
- group: solution
  name: known_baseline_e
  type: double
  Units: meters (east)
  default value: '0'
  enumerated possible values: 
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: 
- group: solution
  name: known_baseline_d
  type: double
  Units: meters (down)
  default value: '0'
  enumerated possible values: 
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: 
- group: system_info
  name: serial_number
  type: integer
  Units: 
  default value: 
  enumerated possible values: 
  Description: The serial number of the piksi
  Notes: This number should match the number on the barcode and cannot be modified
- group: system_info
  name: firmware_version
  type: string
  Units: 
  default value: 
  enumerated possible values: 
  Description: Indicates the firmware version for the current piksi
  Notes: 'For user generated firmware, this information will appear the same as the
    GIT command: "git describe --dirty"'
- group: system_info
  name: firmware_built
  type: string
  Units: 
  default value: 
  enumerated possible values: 
  Description: Date of hardware build
  Notes: 
- group: system_info
  name: hw_revision
  type: string
  Units: 
  default value: 
  enumerated possible values: 
  Description: hardware revision for piksi
  Notes: 
- group: system_info
  name: nap_version
  type: integer
  Units: 
  default value: 
  enumerated possible values: 
  Description: Version of the Navigation Acceleration Process (NAP)
  Notes: Version of code for the NAP (which runs in the Piksi FPGA)
- group: system_info
  name: nap_channels
  type: integer
  Units: 
  default value: 
  enumerated possible values: 
  Description: Number of tracking channels in the NAP firmware
  Notes: 
- group: system_info
  name: nap_fft_index_bits
  type: 
  Units: 
  default value: 
  enumerated possible values: 
  Description: Number of bits to represent the result of fast fourier transform in
    NAP firmware
  Notes: 
- group: system_monitor
  name: heartbeat_period_milliseconds
  type: integer
  Units: 
  default value: 
  enumerated possible values: 
  Description: Period for sending the SBP_HEARTBEAT and MSG_BASE_POS SBP messages
  Notes: 
- group: telemetry_radio
  name: configuration_string
  type: string
  Units: 
  default value: 
  enumerated possible values: 
  Description: Configuration string to send radio modem over UART when detected
  Notes: 
- group: uart_ftdi
  name: mode
  type: enum
  Units: 
  default value: SBP
  enumerated possible values: SBP,NMEA,RTCM
  Description: Configure mode for uart for the USB port on piksi
  Notes: 
- group: uart_ftdi
  name: sbp_message_mask
  type: integer
  Units: 
  default value: 65535 (decimal), 0xFFFF (hex)
  enumerated possible values: 
  Description: Configure the message mask for SBP messages on the uart for the USB
    port on piksi
  Notes: "The message mask is bitwise anded to the message identifier for a particular
    message.  If the result is non-zero, the message will be sent over this UART.
    For example, consider the Piksi firmware sending an SBP
    message with ID 0x0041. If UART A has mask 64 = 0x0040, 
    The SBP subsystem bitwise-ands the message id with UART A's mask giving the result
    of 0x0040. Since the result is non-zero, the message is valid for UART A and is sent. 
    Practically, the UART with mask 64 (0x0020) transmits
    only RTK observation data and the USART with mask 65280 (0xFF00) transmits
    most messages (this is the default USB USART on Piksi)."
- group: uart_ftdi
  name: baudrate
  type: integer
  Units: bits/s
  default value: '115200'
  enumerated possible values: 
  Description: The baudrate for the uart for the USB port on piksi
  Notes: 
- group: uart_uarta
  name: mode
  type: enum
  Units: 
  default value: SBP
  enumerated possible values: SBP,NMEA,RTCM
  Description: Configure mode for uart
  Notes: 
- group: uart_uarta
  name: sbp_message_mask
  type: integer
  Units: 
  default value: 64 (decimal), 0x0020 (hex)
  enumerated possible values: 
  Description: Configure the message mask for SBP messages on uart
  Notes: The default message mask on this uart (0x0020) is appropriate for a radio to communicate observation messages
    to another piksi.
- group: uart_uarta
  name: configure_telemetry_radio_on_boot
  type: boolean
  Units: 
  default value: 'TRUE'
  enumerated possible values: true,false
  Description: Determines whether this uart will attempt to configure a telemetry
    radio upon boot
  Notes: If a telemetry radio is connected to this UART, this should be set to true
    in order to send the configuration string to the radio.
- group: uart_uarta
  name: baudrate
  type: integer
  Units: bits/s
  default value: '115200'
  enumerated possible values: 
  Description: The baudrate for the uart
  Notes: The radio baudrate may be constrained by the particular RF equipment used
    for the telemetry radio.
- group: uart_uartb
  name: mode
  type: enum
  Units: 
  default value: SBP
  enumerated possible values: SBP,NMEA,RTCM
  Description: Configure mode for uart
- group: uart_uartb
  name: sbp_message_mask
  type: integer
  Units: 
  default value: 655280 (decimal), 0xFF00 (hex)
  enumerated possible values: 
  Description: Configure the message mask for SBP messages on uart
  Notes: The default message mask on this uart (0xFF00) is appropriate for a general purpose interface to the piksi.
- group: uart_uartb
  name: configure_telemetry_radio_on_boot
  type: boolean
  Units: 
  default value: 'TRUE'
  enumerated possible values: true,false
  Description: Determines whether this uart will attempt to configure a telemetry
    radio upon boot
  Notes: If a telemetry radio is connected to this UART, this should be set to true
    in order to send the configuration string to the radio.
- group: uart_uartb
  name: baudrate
  type: integer
  Units: bits/s
  default value: '115200'
  enumerated possible values: 
  Description: The baudrate for the uart
  Notes: 
